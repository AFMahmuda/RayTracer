#size 1366 768
#size 640 480 
#size 240 160
size 120 80
#size 60 40
#size 20 16

output default

camera 0 -4 4 0 -1 0 0 1 1 45
#camera 0 0 4 0 0 0 0 1 0 45
point 1.5 1 3 1 1 1
point -1 -2 3 0.5 0.5 0.5
#directional 0 0 -1 1 1 1

maxdepth 

maxverts 8

vertex -1 -1 -1
vertex +1 -1 -1 
vertex +1 +1 -1 
vertex -1 +1 -1 
vertex -1 -1 +1
vertex +1 -1 +1 
vertex +1 +1 +1
vertex -1 +1 +1

pushTransform
# The basic camera transform to return to for new parts

# The actual cube definition.  Since no instancing is supported, I will just 
# repeat this to create many cubes.  For extra credit, you can implement 
# instancing to make this simpler.  Alternatively, define a ray-cube 
# intersection test.

ambient 0.2 0.2 0.2


diffuse 0.7 0.7 1

scale 2 1 0.25
tri 0 1 5 
tri 0 5 4 
tri 3 7 6
tri 3 6 2
tri 1 2 6
tri 1 6 5 
tri 0 7 3 
tri 0 4 7 
tri 0 3 2 
tri 0 2 1
tri 4 5 6 
tri 4 6 7 

popTransform
pushTransform 
# This idiom restores the camera transform and pushes it back on the stack
# Now, I draw the 4 legs of the table.
# Note that like OpenGL, commands right-multiply

diffuse 0.7 0.7 0.4

translate -1.75 -0.8 -0.25 
translate 0 0 -2.0 
scale 0.15 0.15 2.0 
tri 0 1 5 
tri 0 5 4 
tri 3 7 6
tri 3 6 2
tri 1 2 6
tri 1 6 5 
tri 0 7 3 
tri 0 4 7 
tri 0 3 2 
tri 0 2 1
tri 4 5 6 
tri 4 6 7 

# leg 2: Note that I'm only changing a single translation command.

popTransform
pushTransform 
translate +1.75 -0.8 -0.25
translate 0 0 -2.0 
scale 0.15 0.15 2.0 
tri 0 1 5 
tri 0 5 4 
tri 3 7 6
tri 3 6 2
tri 1 2 6
tri 1 6 5 
tri 0 7 3 
tri 0 4 7 
tri 0 3 2 
tri 0 2 1
tri 4 5 6 
tri 4 6 7 

# leg 3: Note that I'm only changing a single translation command.

popTransform
pushTransform 
translate +1.75 +0.8 -0.25
translate 0 0 -2.0 
scale 0.15 0.15 2.0 
tri 0 1 5 
tri 0 5 4 
tri 3 7 6
tri 3 6 2
tri 1 2 6
tri 1 6 5 
tri 0 7 3 
tri 0 4 7 
tri 0 3 2 
tri 0 2 1
tri 4 5 6 
tri 4 6 7 

# leg 4: Note that I'm only changing a single translation command.

popTransform
pushTransform 
translate -1.75 +0.8 -0.25
translate 0 0 -2.0 
scale 0.15 0.15 2.0 
tri 0 1 5 
tri 0 5 4 
tri 3 7 6
tri 3 6 2
tri 1 2 6
tri 1 6 5 
tri 0 7 3 
tri 0 4 7 
tri 0 3 2 
tri 0 2 1
tri 4 5 6 
tri 4 6 7 


# Now draw the spheres

diffuse 0 1 0 
popTransform
pushTransform 
translate  0 0 0.5
rotate 0 0 1 45
scale 1.0 0.25 0.25 
sphere 0 0 0 1

diffuse 1 0 0
popTransform
pushTransform 
translate  0 0 0.5
rotate 0 0 1 -45
scale 1.0 0.25 0.25 
sphere 0 0 0 1

diffuse 0 1 1 
popTransform
pushTransform
translate -1.5 -0.8 0.65
scale 0.4 0.4 0.4
sphere 0 0 0 1

diffuse 0 1 1 
popTransform
pushTransform
translate 1.5 -0.8 0.65
scale 0.4 0.4 0.4
sphere 0 0 0 1

diffuse 0 1 1 
popTransform
pushTransform
translate 1.5 0.8 0.65
scale 0.4 0.4 0.4
sphere 0 0 0 1

diffuse 0 1 1 
popTransform
pushTransform
translate -1.5 0.8 0.65
scale 0.4 0.4 0.4
sphere 0 0 0 1